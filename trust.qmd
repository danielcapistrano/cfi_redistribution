# Trust

In this section, we explore the hypothesis of the moderating role of trust in government and politicians (@breznau_moderating_2025). 


```{r}
library(tidyverse)
library(haven)
library(gt)
library(gtsummary)
library(plotly)

# Function to get the name of the latest file
get_latest <- function(file_pattern){
    file_list <- list.files(path = "./data", pattern = file_pattern)
    latest_file <- tail(sort(file_list), n = 1)
    return(latest_file)
}


# Read file in the root of sub-folder "data" with name containing "ESS" 
df_ess <- read_dta(paste0("data/", get_latest("ESS")))

```


## Trust in politicians 


::: {.callout-note collapse="true"}

### Question wording
Using this card, please tell me on a score of 0-10 how much you personally trust each of the institutions I read out. 0 means you do not trust an institution at all, and 10 means you have complete trust. Firstly... ...politicians?

:::


```{r}
#| label: fig-trstplt-time
#| fig-cap: "Average trust in politicians by subjective income group (2002-2022)"

get_series <- function(mygroup, myvar){

(df_ess |>
    filter(!is.na(get(myvar)) & !is.na(get(mygroup))) |> 
    group_by(round = as_factor(essround), group = as_factor(get(mygroup)))  |> 
    summarise(
        mean = weighted.mean(get(myvar), w = pspwght, na.rm = T),
        se = sd(get(myvar), na.rm = T)/sqrt(length((get(myvar))))) |> 
    ggplot(aes(x = round, y = mean, ymin = mean - 1.96*se, ymax = mean + 1.96*se, group = group, color = group)) +
    geom_point() +
    geom_line()+
    ylim(0,9)+
    theme_classic()) |> 
    ggplotly()  |> 
    layout(legend = list(orientation = "h", x = 0.4, y = -0.2))
}

get_series("hincfel", "trstplt")

```


## Satisfied with government

::: {.callout-note collapse="true"}

### Question wording
Now thinking about the [country] government, how satisfied are you with the way it is doing its job?

0 - Extremely dissatisfied   
10 - Extremely satisfied	
:::

```{r}
#| label: fig-stfgov-time
#| fig-cap: "Average satisfaction with government by subjective income group (2002-2022)"


get_series("hincfel", "stfgov")

```

